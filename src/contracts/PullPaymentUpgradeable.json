{
  "contractName": "PullPaymentUpgradeable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple implementation of a https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment] strategy, where the paying contract doesn't interact directly with the receiver account, which must withdraw its payments itself. Pull-payments are often considered the best practice when it comes to sending Ether, security-wise. It prevents recipients from blocking execution, and eliminates reentrancy concerns. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. To use, derive from the `PullPayment` contract, and use {_asyncTransfer} instead of Solidity's `transfer` function. Payees can query their due payments with {payments}, and retrieve them with {withdrawPayments}.\",\"kind\":\"dev\",\"methods\":{\"payments(address)\":{\"details\":\"Returns the payments owed to an address.\",\"params\":{\"dest\":\"The creditor's address.\"}},\"withdrawPayments(address)\":{\"details\":\"Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"Whose payments will be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/payment/PullPaymentUpgradeable.sol\":\"PullPaymentUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol\":{\"keccak256\":\"0xca5ef6ed50c212be4cffea0fd7974d659e92b1328906069f7a14e2cc1bedfbfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1edd6602dadeb1c00d8bd54aa6cee379dae83846e5b613feefbc8cdcdae42b0\",\"dweb:/ipfs/QmbpZvED3aj3x7fr2pdUC5iDU6x5ehDxKQyj3pm2NegbhM\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xf4ed481ddeacce3cd55a3c75ad114b8ee58ff4382bc0b09d6d8995c37888c565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1701a76ba026b4bd4983cc035627835f97a9f0a592dcefeaa636a8b285347128\",\"dweb:/ipfs/QmVpnD2eqYDtogRWVPs4WWH8s9reE9o1vyLAX2UhKGvZey\"]},\"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x5ce1bdd7144d5fd5284ec2e7a008f95c8c56a384d29200a63a93f3a247c4cf3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54fd179f1133eb2e9514c5174952b38e70557266818832b12356febf2262fed2\",\"dweb:/ipfs/QmRKKg9o4EXa4i6kHXjmnh9zdpstYe2tXwe5TKBkCxdSav\"]},\"@openzeppelin/contracts-upgradeable/payment/PullPaymentUpgradeable.sol\":{\"keccak256\":\"0x0d36d2ef5610f5d1da269dedbcf566700ecd1721f2852561253edfaae1650274\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0722d0b602aa875db39dad03f6f371b441446d4f1bb07d0d64a1cf6aae9b4c52\",\"dweb:/ipfs/QmUedcSptG5h7rYmyiBsGsnX2XZMfDfBeovdpPsJTiLfvC\"]},\"@openzeppelin/contracts-upgradeable/payment/escrow/EscrowUpgradeable.sol\":{\"keccak256\":\"0x40b0098c4e27a1b70ba4b87d0ab3290a129590c22e77a5219df471aad0942bc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fff32dd428eb92074bdbb368f8264eee0f3e1fcff592707631cbfa3647065adb\",\"dweb:/ipfs/QmeKGHfhmNSCQynghMXrESmP3GxZ3T1s7NRRZJG1soAZV3\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0x8eee8bd8c216a3e437bf7a4c9844348f47a2d990e5b06cd96d250e33ab04c25a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6bb2af880b12be26b148ee99ac3a984168e7fc74721bab9cd44598a0669b038\",\"dweb:/ipfs/QmPfFDaXZbThJgaVim7nvxrw1RuD2xKWCG89K6pznmC8pJ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x21d0ea14543f00187a5015b87993127dcf56d4ed40406f5a32a671a103209213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c8229a6611766c940789e0cb9a847398b9002a5ed557918ee8bfeb18ea36603\",\"dweb:/ipfs/QmfUbx4y6gjb9oj8V2qe9W5Eph31kimDdtpSGXa9po4u3L\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061027f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806331b3eb941461003b578063e2982c211461007f575b600080fd5b61007d6004803603602081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100d7565b005b6100c16004803603602081101561009557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061017d565b6040518082815260200191505060405180910390f35b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561016257600080fd5b505af1158015610176573d6000803e3d6000fd5b5050505050565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a9db1a836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561020757600080fd5b505afa15801561021b573d6000803e3d6000fd5b505050506040513d602081101561023157600080fd5b8101908080519060200190929190505050905091905056fea2646970667358221220d93628fb5b1a54b546d43cfa0eb1955224749a77d45ce589db6db00ece61998b64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806331b3eb941461003b578063e2982c211461007f575b600080fd5b61007d6004803603602081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100d7565b005b6100c16004803603602081101561009557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061017d565b6040518082815260200191505060405180910390f35b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561016257600080fd5b505af1158015610176573d6000803e3d6000fd5b5050505050565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a9db1a836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561020757600080fd5b505afa15801561021b573d6000803e3d6000fd5b505050506040513d602081101561023157600080fd5b8101908080519060200190929190505050905091905056fea2646970667358221220d93628fb5b1a54b546d43cfa0eb1955224749a77d45ce589db6db00ece61998b64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "1087:1839:10:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1087:1839:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2076:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2298:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2076:104;2150:7;;;;;;;;;;;:16;;;2167:5;2150:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2076:104;:::o;2298:110::-;2351:7;2377;;;;;;;;;;;:18;;;2396:4;2377:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:31;;2298:110;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./escrow/EscrowUpgradeable.sol\";\nimport \"../proxy/Initializable.sol\";\n\n/**\n * @dev Simple implementation of a\n * https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n * strategy, where the paying contract doesn't interact directly with the\n * receiver account, which must withdraw its payments itself.\n *\n * Pull-payments are often considered the best practice when it comes to sending\n * Ether, security-wise. It prevents recipients from blocking execution, and\n * eliminates reentrancy concerns.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n *\n * To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n * instead of Solidity's `transfer` function. Payees can query their due\n * payments with {payments}, and retrieve them with {withdrawPayments}.\n */\ncontract PullPaymentUpgradeable is Initializable {\n    EscrowUpgradeable private _escrow;\n\n    function __PullPayment_init() internal initializer {\n        __PullPayment_init_unchained();\n    }\n\n    function __PullPayment_init_unchained() internal initializer {\n        _escrow = new EscrowUpgradeable();\n        _escrow.initialize();\n    }\n\n    /**\n     * @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n     *\n     * Note that _any_ account can call this function, not just the `payee`.\n     * This means that contracts unaware of the `PullPayment` protocol can still\n     * receive funds this way, by having a separate account call\n     * {withdrawPayments}.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * @param payee Whose payments will be withdrawn.\n     */\n    function withdrawPayments(address payable payee) public virtual {\n        _escrow.withdraw(payee);\n    }\n\n    /**\n     * @dev Returns the payments owed to an address.\n     * @param dest The creditor's address.\n     */\n    function payments(address dest) public view returns (uint256) {\n        return _escrow.depositsOf(dest);\n    }\n\n    /**\n     * @dev Called by the payer to store the sent amount as credit to be pulled.\n     * Funds sent in this way are stored in an intermediate {Escrow} contract, so\n     * there is no danger of them being spent before withdrawal.\n     *\n     * @param dest The destination address of the funds.\n     * @param amount The amount to transfer.\n     */\n    function _asyncTransfer(address dest, uint256 amount) internal virtual {\n        _escrow.deposit{ value: amount }(dest);\n    }\n    uint256[49] private __gap;\n}\n",
  "sourcePath": "@openzeppelin/contracts-upgradeable/payment/PullPaymentUpgradeable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/payment/PullPaymentUpgradeable.sol",
    "exportedSymbols": {
      "PullPaymentUpgradeable": [
        3192
      ]
    },
    "id": 3193,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3110,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/payment/escrow/EscrowUpgradeable.sol",
        "file": "./escrow/EscrowUpgradeable.sol",
        "id": 3111,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 3335,
        "src": "58:40:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
        "file": "../proxy/Initializable.sol",
        "id": 3112,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 3406,
        "src": "99:36:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3114,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3405,
              "src": "1122:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3405",
                "typeString": "contract Initializable"
              }
            },
            "id": 3115,
            "nodeType": "InheritanceSpecifier",
            "src": "1122:13:10"
          }
        ],
        "contractDependencies": [
          3334,
          3405
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3113,
          "nodeType": "StructuredDocumentation",
          "src": "137:949:10",
          "text": " @dev Simple implementation of a\n https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n strategy, where the paying contract doesn't interact directly with the\n receiver account, which must withdraw its payments itself.\n Pull-payments are often considered the best practice when it comes to sending\n Ether, security-wise. It prevents recipients from blocking execution, and\n eliminates reentrancy concerns.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n instead of Solidity's `transfer` function. Payees can query their due\n payments with {payments}, and retrieve them with {withdrawPayments}."
        },
        "fullyImplemented": true,
        "id": 3192,
        "linearizedBaseContracts": [
          3192,
          3405
        ],
        "name": "PullPaymentUpgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3117,
            "mutability": "mutable",
            "name": "_escrow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "1142:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
              "typeString": "contract EscrowUpgradeable"
            },
            "typeName": {
              "contractScope": null,
              "id": 3116,
              "name": "EscrowUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3334,
              "src": "1142:17:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                "typeString": "contract EscrowUpgradeable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3125,
              "nodeType": "Block",
              "src": "1233:47:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3122,
                      "name": "__PullPayment_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3143,
                      "src": "1243:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3124,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:30:10"
                }
              ]
            },
            "documentation": null,
            "id": 3126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3119,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3382,
                  "src": "1221:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1221:11:10"
              }
            ],
            "name": "__PullPayment_init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1209:2:10"
            },
            "returnParameters": {
              "id": 3121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1233:0:10"
            },
            "scope": 3192,
            "src": "1182:98:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3142,
              "nodeType": "Block",
              "src": "1347:80:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3131,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3117,
                      "src": "1357:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                        "typeString": "contract EscrowUpgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1367:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EscrowUpgradeable_$3334_$",
                          "typeString": "function () returns (contract EscrowUpgradeable)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 3132,
                          "name": "EscrowUpgradeable",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3334,
                          "src": "1371:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                            "typeString": "contract EscrowUpgradeable"
                          }
                        }
                      },
                      "id": 3134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1367:23:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                        "typeString": "contract EscrowUpgradeable"
                      }
                    },
                    "src": "1357:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                      "typeString": "contract EscrowUpgradeable"
                    }
                  },
                  "id": 3136,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:33:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3137,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3117,
                        "src": "1400:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                          "typeString": "contract EscrowUpgradeable"
                        }
                      },
                      "id": 3139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3212,
                      "src": "1400:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 3140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:20:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3141,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:20:10"
                }
              ]
            },
            "documentation": null,
            "id": 3143,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3129,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3128,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3382,
                  "src": "1335:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1335:11:10"
              }
            ],
            "name": "__PullPayment_init_unchained",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1323:2:10"
            },
            "returnParameters": {
              "id": 3130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1347:0:10"
            },
            "scope": 3192,
            "src": "1286:141:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3155,
              "nodeType": "Block",
              "src": "2140:40:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3152,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3146,
                        "src": "2167:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3149,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3117,
                        "src": "2150:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                          "typeString": "contract EscrowUpgradeable"
                        }
                      },
                      "id": 3151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3329,
                      "src": "2150:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2150:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:23:10"
                }
              ]
            },
            "documentation": {
              "id": 3144,
              "nodeType": "StructuredDocumentation",
              "src": "1433:638:10",
              "text": " @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n Note that _any_ account can call this function, not just the `payee`.\n This means that contracts unaware of the `PullPayment` protocol can still\n receive funds this way, by having a separate account call\n {withdrawPayments}.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee Whose payments will be withdrawn."
            },
            "functionSelector": "31b3eb94",
            "id": 3156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayments",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3146,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3156,
                  "src": "2102:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:15:10",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2101:23:10"
            },
            "returnParameters": {
              "id": 3148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2140:0:10"
            },
            "scope": 3192,
            "src": "2076:104:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3169,
              "nodeType": "Block",
              "src": "2360:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3166,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3159,
                        "src": "2396:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3164,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3117,
                        "src": "2377:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                          "typeString": "contract EscrowUpgradeable"
                        }
                      },
                      "id": 3165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositsOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3267,
                      "src": "2377:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:24:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3163,
                  "id": 3168,
                  "nodeType": "Return",
                  "src": "2370:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3157,
              "nodeType": "StructuredDocumentation",
              "src": "2186:107:10",
              "text": " @dev Returns the payments owed to an address.\n @param dest The creditor's address."
            },
            "functionSelector": "e2982c21",
            "id": 3170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payments",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3159,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3170,
                  "src": "2316:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2316:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2315:14:10"
            },
            "returnParameters": {
              "id": 3163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3162,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3170,
                  "src": "2351:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2350:9:10"
            },
            "scope": 3192,
            "src": "2298:110:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3186,
              "nodeType": "Block",
              "src": "2838:55:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3183,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "2881:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3178,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3117,
                          "src": "2848:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                            "typeString": "contract EscrowUpgradeable"
                          }
                        },
                        "id": 3180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3297,
                        "src": "2848:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 3182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 3181,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3175,
                          "src": "2872:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2848:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 3184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2848:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3185,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:38:10"
                }
              ]
            },
            "documentation": {
              "id": 3171,
              "nodeType": "StructuredDocumentation",
              "src": "2414:348:10",
              "text": " @dev Called by the payer to store the sent amount as credit to be pulled.\n Funds sent in this way are stored in an intermediate {Escrow} contract, so\n there is no danger of them being spent before withdrawal.\n @param dest The destination address of the funds.\n @param amount The amount to transfer."
            },
            "id": 3187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asyncTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3173,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3187,
                  "src": "2791:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2791:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3175,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3187,
                  "src": "2805:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2805:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2790:30:10"
            },
            "returnParameters": {
              "id": 3177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2838:0:10"
            },
            "scope": 3192,
            "src": "2767:126:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3191,
            "mutability": "mutable",
            "name": "__gap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2898:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 3188,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2898:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3190,
              "length": {
                "argumentTypes": null,
                "hexValue": "3439",
                "id": 3189,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2906:2:10",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "2898:11:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3193,
        "src": "1087:1839:10"
      }
    ],
    "src": "33:2894:10"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/payment/PullPaymentUpgradeable.sol",
    "exportedSymbols": {
      "PullPaymentUpgradeable": [
        3192
      ]
    },
    "id": 3193,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3110,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/payment/escrow/EscrowUpgradeable.sol",
        "file": "./escrow/EscrowUpgradeable.sol",
        "id": 3111,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 3335,
        "src": "58:40:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
        "file": "../proxy/Initializable.sol",
        "id": 3112,
        "nodeType": "ImportDirective",
        "scope": 3193,
        "sourceUnit": 3406,
        "src": "99:36:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3114,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3405,
              "src": "1122:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3405",
                "typeString": "contract Initializable"
              }
            },
            "id": 3115,
            "nodeType": "InheritanceSpecifier",
            "src": "1122:13:10"
          }
        ],
        "contractDependencies": [
          3334,
          3405
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3113,
          "nodeType": "StructuredDocumentation",
          "src": "137:949:10",
          "text": " @dev Simple implementation of a\n https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n strategy, where the paying contract doesn't interact directly with the\n receiver account, which must withdraw its payments itself.\n Pull-payments are often considered the best practice when it comes to sending\n Ether, security-wise. It prevents recipients from blocking execution, and\n eliminates reentrancy concerns.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n instead of Solidity's `transfer` function. Payees can query their due\n payments with {payments}, and retrieve them with {withdrawPayments}."
        },
        "fullyImplemented": true,
        "id": 3192,
        "linearizedBaseContracts": [
          3192,
          3405
        ],
        "name": "PullPaymentUpgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3117,
            "mutability": "mutable",
            "name": "_escrow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "1142:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
              "typeString": "contract EscrowUpgradeable"
            },
            "typeName": {
              "contractScope": null,
              "id": 3116,
              "name": "EscrowUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3334,
              "src": "1142:17:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                "typeString": "contract EscrowUpgradeable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3125,
              "nodeType": "Block",
              "src": "1233:47:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3122,
                      "name": "__PullPayment_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3143,
                      "src": "1243:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3124,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:30:10"
                }
              ]
            },
            "documentation": null,
            "id": 3126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3119,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3382,
                  "src": "1221:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1221:11:10"
              }
            ],
            "name": "__PullPayment_init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1209:2:10"
            },
            "returnParameters": {
              "id": 3121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1233:0:10"
            },
            "scope": 3192,
            "src": "1182:98:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3142,
              "nodeType": "Block",
              "src": "1347:80:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3131,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3117,
                      "src": "1357:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                        "typeString": "contract EscrowUpgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1367:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EscrowUpgradeable_$3334_$",
                          "typeString": "function () returns (contract EscrowUpgradeable)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 3132,
                          "name": "EscrowUpgradeable",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3334,
                          "src": "1371:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                            "typeString": "contract EscrowUpgradeable"
                          }
                        }
                      },
                      "id": 3134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1367:23:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                        "typeString": "contract EscrowUpgradeable"
                      }
                    },
                    "src": "1357:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                      "typeString": "contract EscrowUpgradeable"
                    }
                  },
                  "id": 3136,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:33:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3137,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3117,
                        "src": "1400:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                          "typeString": "contract EscrowUpgradeable"
                        }
                      },
                      "id": 3139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3212,
                      "src": "1400:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 3140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:20:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3141,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:20:10"
                }
              ]
            },
            "documentation": null,
            "id": 3143,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3129,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3128,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3382,
                  "src": "1335:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1335:11:10"
              }
            ],
            "name": "__PullPayment_init_unchained",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1323:2:10"
            },
            "returnParameters": {
              "id": 3130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1347:0:10"
            },
            "scope": 3192,
            "src": "1286:141:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3155,
              "nodeType": "Block",
              "src": "2140:40:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3152,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3146,
                        "src": "2167:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3149,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3117,
                        "src": "2150:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                          "typeString": "contract EscrowUpgradeable"
                        }
                      },
                      "id": 3151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3329,
                      "src": "2150:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2150:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:23:10"
                }
              ]
            },
            "documentation": {
              "id": 3144,
              "nodeType": "StructuredDocumentation",
              "src": "1433:638:10",
              "text": " @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n Note that _any_ account can call this function, not just the `payee`.\n This means that contracts unaware of the `PullPayment` protocol can still\n receive funds this way, by having a separate account call\n {withdrawPayments}.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee Whose payments will be withdrawn."
            },
            "functionSelector": "31b3eb94",
            "id": 3156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayments",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3146,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3156,
                  "src": "2102:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:15:10",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2101:23:10"
            },
            "returnParameters": {
              "id": 3148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2140:0:10"
            },
            "scope": 3192,
            "src": "2076:104:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3169,
              "nodeType": "Block",
              "src": "2360:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3166,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3159,
                        "src": "2396:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3164,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3117,
                        "src": "2377:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                          "typeString": "contract EscrowUpgradeable"
                        }
                      },
                      "id": 3165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositsOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3267,
                      "src": "2377:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:24:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3163,
                  "id": 3168,
                  "nodeType": "Return",
                  "src": "2370:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3157,
              "nodeType": "StructuredDocumentation",
              "src": "2186:107:10",
              "text": " @dev Returns the payments owed to an address.\n @param dest The creditor's address."
            },
            "functionSelector": "e2982c21",
            "id": 3170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payments",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3159,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3170,
                  "src": "2316:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2316:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2315:14:10"
            },
            "returnParameters": {
              "id": 3163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3162,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3170,
                  "src": "2351:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2350:9:10"
            },
            "scope": 3192,
            "src": "2298:110:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3186,
              "nodeType": "Block",
              "src": "2838:55:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3183,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "2881:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3178,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3117,
                          "src": "2848:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EscrowUpgradeable_$3334",
                            "typeString": "contract EscrowUpgradeable"
                          }
                        },
                        "id": 3180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3297,
                        "src": "2848:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 3182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 3181,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3175,
                          "src": "2872:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2848:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 3184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2848:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3185,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:38:10"
                }
              ]
            },
            "documentation": {
              "id": 3171,
              "nodeType": "StructuredDocumentation",
              "src": "2414:348:10",
              "text": " @dev Called by the payer to store the sent amount as credit to be pulled.\n Funds sent in this way are stored in an intermediate {Escrow} contract, so\n there is no danger of them being spent before withdrawal.\n @param dest The destination address of the funds.\n @param amount The amount to transfer."
            },
            "id": 3187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asyncTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3173,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3187,
                  "src": "2791:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2791:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3175,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3187,
                  "src": "2805:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2805:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2790:30:10"
            },
            "returnParameters": {
              "id": 3177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2838:0:10"
            },
            "scope": 3192,
            "src": "2767:126:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3191,
            "mutability": "mutable",
            "name": "__gap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3192,
            "src": "2898:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 3188,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2898:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3190,
              "length": {
                "argumentTypes": null,
                "hexValue": "3439",
                "id": 3189,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2906:2:10",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "2898:11:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3193,
        "src": "1087:1839:10"
      }
    ],
    "src": "33:2894:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-25T10:22:53.214Z",
  "devdoc": {
    "details": "Simple implementation of a https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment] strategy, where the paying contract doesn't interact directly with the receiver account, which must withdraw its payments itself. Pull-payments are often considered the best practice when it comes to sending Ether, security-wise. It prevents recipients from blocking execution, and eliminates reentrancy concerns. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. To use, derive from the `PullPayment` contract, and use {_asyncTransfer} instead of Solidity's `transfer` function. Payees can query their due payments with {payments}, and retrieve them with {withdrawPayments}.",
    "kind": "dev",
    "methods": {
      "payments(address)": {
        "details": "Returns the payments owed to an address.",
        "params": {
          "dest": "The creditor's address."
        }
      },
      "withdrawPayments(address)": {
        "details": "Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "Whose payments will be withdrawn."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}